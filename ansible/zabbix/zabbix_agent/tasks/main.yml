---
# tasks file for zabbix_agent

- name: "Install Zabbix deb package from the internet"
  ansible.builtin.apt:
    deb: https://repo.zabbix.com/zabbix/6.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_6.0-4+ubuntu20.04_all.deb

- name: "Install zabbix-agent"
  ansible.builtin.apt:
    update_cache: yes
    pkg:
      - zabbix-agent2
      - zabbix-agent2-plugin-*
    state: latest

- block:
  - name: "Change zabbix-agent config for web_servers and frontend"
    ansible.builtin.lineinfile:
      dest: /etc/zabbix/zabbix_agent2.conf
      line: "{{ item.line }}"
      regexp: "{{ item.regexp }}"
    loop:
      - { regexp: '^ServerActive=.*', line: '#ServerActive=' }
      - { regexp: '^Server=.*', line: "Server={{hostvars['zabbix_server'].ansible_host}}" }
#
 # - name: "Change config file"
 #   ansible.builtin.template:
 #     src: templates/zabbix_agent2_other.conf.j2
 #     dest: /etc/zabbix/zabbix_agent2.conf
#      owner: root
#      group: root
#      mode: 0644
#
  - name: "Add/update hosts"
    become: true
    vars:
      ansible_network_os: community.zabbix.zabbix
      ansible_connection: httpapi
      ansible_httpapi_port: 80
      ansible_user: "{{ x_zabbix_username }}"
      ansible_httpapi_pass: "{{ x_zabbix_password }}"
    delegate_to: "{{ zabbix_web_external  }}"
    community.zabbix.zabbix_host:
      host_name: "{{ ansible_hostname }}"
      host_groups:
      - Linux servers
      link_templates:
      - Linux by Zabbix agent
      interfaces:
      - type: agent
        main: 1
        useip: 1
        ip: "{{ ansible_host }}"
        port: "10050"
      state: present
  when: inventory_hostname != "zabbix_server"
  notify: Restart zabbix-agent2

#- name: "Change config file"
#  ansible.builtin.template:
#    src: templates/zabbix_agent2_server.conf.j2
#    dest: /etc/zabbix/zabbix_agent2.conf
#    owner: root
#    group: root
#    mode: 0644
#  when: inventory_hostname == "zabbix_server"
#  notify: Restart zabbix-agent2
#
- name: "Change zabbix-agent config for zabbix_server"
  ansible.builtin.lineinfile:
    dest: /etc/zabbix/zabbix_agent2.conf
    line: "{{ item.line }}"
    regexp: "{{ item.regexp }}"
  loop:
    - { regexp: '^ServerActive=.*', line: '#ServerActive=' }
    - { regexp: '^Server=.*', line: "Server=127.0.0.1" }
  when: inventory_hostname == "zabbix_server"
  notify: Restart zabbix-agent2

- name: "Start zabbix-agent if not started"
  ansible.builtin.service:
    name: zabbix-agent2
    state: started
    enabled: yes

